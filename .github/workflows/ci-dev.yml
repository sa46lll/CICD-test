# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle - DEV version

on:
  push:
    branches: [ DEPLOYMENT ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to private registry
      uses: docker/login-action@v1
      with:
        registry: ${{ secrets.REGISTRY_URL }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        
    - name: Generate Image Tag
      id: image
      run: |
        TAG=$(echo ${{ github.sha }} | cut -c1-8)
        echo TAG=$TAG
        echo "::set-output name=tag::$TAG"
        
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/arm64
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: '${{ secrets.REGISTRY_URL }}/${{ secrets.REGISTRY_USERNAME }}/dev-koo-api:${{ steps.image.outputs.tag }}' 


    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v1

    - name: Checkout kustomize repository
      uses: actions/checkout@v2
      with:
        repository: sa46lll/CICD-kustomize-test
        ref: develop
        token: ${{ secrets.ACTION_TOKEN }}
        path: CICD-kustomize-test

    # 새 이미지 버전으로 파일 수정
    - name: Update Kubernetes resources
      run: |
        cd CICD-kustomize-test/overlays/dev/
        kustomize edit set image dev-koo-api:${{ steps.image.outputs.tag }}
        cat kustomization.yaml
        
    # 수정된 파일 commit & push
    - name: Commit files
      run: |
        cd CICD-kustomize-test
        git config --global user.email "9812smh@naver.com"
        git config --global user.name "sa46lll"
        git commit -am "Update dev-image tag"
        git push -u origin develop
